[{"path":[]},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to hrmn","title":"Contributing to hrmn","text":"outlines propose change hrmn.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to hrmn","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to hrmn","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://jonthegeek.github.io/hrmn/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to hrmn","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jonthegeek/hrmn\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to hrmn","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jonthegeek.github.io/hrmn/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to hrmn","text":"Please note hrmn project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/hrmn/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 hrmn authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jonthegeek.github.io/hrmn/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with hrmn","title":"Getting help with hrmn","text":"Thanks using hrmn! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jonthegeek.github.io/hrmn/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with hrmn","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jonthegeek.github.io/hrmn/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with hrmn","text":"Armed reprex, next step figure ask. ’s question: ’s best ask Data Science Learning Community Slack. options include Posit Community, StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jonthegeek.github.io/hrmn/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with hrmn","text":"’ll try look issue soon can, packages maintained volunteers. good reprex particularly important might weeks months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jonthegeek.github.io/hrmn/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer.","code":""},{"path":"https://jonthegeek.github.io/hrmn/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2025). hrmn: Harmonize Datasets. R package version 0.0.0.9005, https://jonthegeek.github.io/hrmn/.","code":"@Manual{,   title = {hrmn: Harmonize Datasets},   author = {Jon Harmon},   year = {2025},   note = {R package version 0.0.0.9005},   url = {https://jonthegeek.github.io/hrmn/}, }"},{"path":"https://jonthegeek.github.io/hrmn/index.html","id":"hrmn","dir":"","previous_headings":"","what":"Harmonize Datasets","title":"Harmonize Datasets","text":"common early step data analysis data harmonization: converting disparate datasets unified, consistent format, consistent column names, classes, values. goal hrmn make process easy can . hrmn provides declarative, schema-first framework defining target data structure mapping various source data frames structure. separating definition target state transformation logic, hrmn makes data intake process robust, readable, maintainable. builds upon validation stabilization principles {stbl} package, extending handle complex data-cleaning tasks like value lookups case conversions.","code":""},{"path":"https://jonthegeek.github.io/hrmn/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Harmonize Datasets","text":"can install development version hrmn GitHub :","code":"# install.packages(\"pak\") pak::pak(\"jonthegeek/hrmn\")"},{"path":"https://jonthegeek.github.io/hrmn/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Harmonize Datasets","text":"hrmn workflow organized around two core function families: specify_*() harmonize_*(). specify_*() family (e.g., specify_df(), specify_fct()) used create “specification” object. object acts formal contract, declaratively defining exact column names, data types, constraints (allowed factor levels value ranges) target object. specification defined, harmonize_*() family (e.g., harmonize_df(), harmonize_fct()) used transform source data. functions take messy input data frame target specification, along set mapping rules describe convert source columns target forms. process ensures final output correct structure values cleaned validated, clear errors data conformed specification.","code":""},{"path":"https://jonthegeek.github.io/hrmn/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Harmonize Datasets","text":"Please note hrmn project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/hrmn/principles.html","id":null,"dir":"","previous_headings":"","what":"hrmn design principles","title":"hrmn design principles","text":"experiment making key package design principles explicit, versus implicit code. goal make maintenance easier, spread time across people. idea copied usethis. principles work progress.","code":""},{"path":"https://jonthegeek.github.io/hrmn/principles.html","id":"function-naming-conventions","dir":"","previous_headings":"","what":"Function Naming Conventions","title":"hrmn design principles","text":"Internal helper functions follow specific naming patterns make purpose clear glance. -.*(): Internal helper functions exported. .-prefixed versions families might exist. - harmonize_*(): Functions take data object (like vector data frame) (usually) harmonization specification, apply harmonization, return modified data object. functions form core logic package. - specify_*(): Functions create return harmonization specification object, defines target structure constraints data harmonization. functions used set harmonization process. - .stop_if_*(): Functions conditionally throw error based unmet criteria. condition met, return invisible(NULL) (generally “automatically” via (). Generally used input validation. - .stop_*() (_if_): Functions unconditionally throw specific, named error. used abstract call .hrmn_abort() common error conditions. - .to_*(): Functions attempt coerce object specific class, e.g., .to_hrmn_spec().","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-confirm_spec_subclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Confirm that a spec has a given spec subclass — .confirm_spec_subclass","title":"Confirm that a spec has a given spec subclass — .confirm_spec_subclass","text":"Confirm spec given spec subclass","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-confirm_spec_subclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confirm that a spec has a given spec subclass — .confirm_spec_subclass","text":"","code":".confirm_spec_subclass(.spec, .subclass = NULL, .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-confirm_spec_subclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confirm that a spec has a given spec subclass — .confirm_spec_subclass","text":".spec (NULL hrmn_spec) object validate harmonization specification object. .subclass (NULL length-1 character) provided, check .spec inherits given subclass. example, confirm .spec class \"hrmn_spec_fct, use .subclass = \"fct\".","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-confirm_spec_subclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confirm that a spec has a given spec subclass — .confirm_spec_subclass","text":"validated .spec object, informative error.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize a specific column within a data.frame — .harmonize_col","title":"Harmonize a specific column within a data.frame — .harmonize_col","text":"Harmonize specific column within data.frame","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize a specific column within a data.frame — .harmonize_col","text":"","code":".harmonize_col(.data, .spec, .col_name, .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize a specific column within a data.frame — .harmonize_col","text":".data (data.frame) data frame harmonize. .spec (hrmn_spec_df) data frame harmonization specification. .col_name (length-1 character) name column harmonize within .data. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize a specific column within a data.frame — .harmonize_col","text":"input .data harmonized tibble::tibble().","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_col_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize data frame column names against a specification — .harmonize_col_names","title":"Harmonize data frame column names against a specification — .harmonize_col_names","text":"almost definitely migrate stbl future.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_col_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize data frame column names against a specification — .harmonize_col_names","text":"","code":".harmonize_col_names(   .data,   .spec,   .unspecified_columns,   .call = rlang::caller_env() )"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_col_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize data frame column names against a specification — .harmonize_col_names","text":".data (data.frame) data frame harmonize. .spec (hrmn_spec_df) data frame harmonization specification. .unspecified_columns (\"error\", \"drop\", \"keep\") handle columns .data present .spec. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_col_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize data frame column names against a specification — .harmonize_col_names","text":"data.frame, possibly columns removed.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize a data frame based on data inputs — .harmonize_df_data","title":"Harmonize a data frame based on data inputs — .harmonize_df_data","text":"Harmonize data frame based data inputs","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize a data frame based on data inputs — .harmonize_df_data","text":"","code":".harmonize_df_data(   .data,   ...,   .spec,   .unspecified_columns,   .call = rlang::caller_env() )"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize a data frame based on data inputs — .harmonize_df_data","text":".data (data.frame) data frame harmonize. ... dots future extensions must empty. .spec (hrmn_spec_df) data frame harmonization specification. .unspecified_columns (\"error\", \"drop\", \"keep\") handle columns .data present .spec. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize a data frame based on data inputs — .harmonize_df_data","text":"data.frame custom harmonizations column name reconciliation applied.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize a data frame based on custom harmonization calls — .harmonize_df_dots","title":"Harmonize a data frame based on custom harmonization calls — .harmonize_df_dots","text":"Harmonize data frame based custom harmonization calls","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize a data frame based on custom harmonization calls — .harmonize_df_dots","text":"","code":".harmonize_df_dots(.data, ..., .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize a data frame based on custom harmonization calls — .harmonize_df_dots","text":".data (data.frame) data frame harmonize. ... dots future extensions must empty. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize a data frame based on custom harmonization calls — .harmonize_df_dots","text":"data.frame custom harmonizations applied.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize a data frame based on a harmonization specification — .harmonize_df_spec","title":"Harmonize a data frame based on a harmonization specification — .harmonize_df_spec","text":"Harmonize data frame based harmonization specification","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize a data frame based on a harmonization specification — .harmonize_df_spec","text":"","code":".harmonize_df_spec(.data, .spec, .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize a data frame based on a harmonization specification — .harmonize_df_spec","text":".data (data.frame) data frame harmonize. .spec (hrmn_spec_df) data frame harmonization specification. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_df_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize a data frame based on a harmonization specification — .harmonize_df_spec","text":"input .data harmonized tibble::tibble().","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_extra_col_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize extra data frame column names not in specification — .harmonize_extra_col_names","title":"Harmonize extra data frame column names not in specification — .harmonize_extra_col_names","text":"Harmonize extra data frame column names specification","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_extra_col_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize extra data frame column names not in specification — .harmonize_extra_col_names","text":"","code":".harmonize_extra_col_names(   .data,   .spec,   .unspecified_columns,   .call = rlang::caller_env() )"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_extra_col_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize extra data frame column names not in specification — .harmonize_extra_col_names","text":".data (data.frame) data frame harmonize. .spec (hrmn_spec_df) data frame harmonization specification. .unspecified_columns (\"error\", \"drop\", \"keep\") handle columns .data present .spec. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_extra_col_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize extra data frame column names not in specification — .harmonize_extra_col_names","text":"data.frame, possibly columns removed.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_fct_by_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a lookup table to a character vector — .harmonize_fct_by_lookup","title":"Apply a lookup table to a character vector — .harmonize_fct_by_lookup","text":"Apply lookup table character vector","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_fct_by_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a lookup table to a character vector — .harmonize_fct_by_lookup","text":"","code":".harmonize_fct_by_lookup(.data, .lookup = NULL)"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_fct_by_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a lookup table to a character vector — .harmonize_fct_by_lookup","text":".data (character coercible character) vector harmonize specified factor. .lookup (named character) vector replacement values. names values .data values target values.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-harmonize_fct_by_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a lookup table to a character vector — .harmonize_fct_by_lookup","text":"character vector values replaced according lookup table.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-hrmn_abort.html","id":null,"dir":"Reference","previous_headings":"","what":"Signal an error with standards applied — .hrmn_abort","title":"Signal an error with standards applied — .hrmn_abort","text":"wrapper around stbl::pkg_abort() throw classed errors.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-hrmn_abort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signal an error with standards applied — .hrmn_abort","text":"","code":".hrmn_abort(   message,   subclass,   .call = caller_env(),   message_env = .call,   parent = NULL,   ... )"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-hrmn_abort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signal an error with standards applied — .hrmn_abort","text":"message (character) message new error. Messages formatted cli::cli_bullets(). subclass (character) Class(es) assign error. prefixed \"{package}-error-\". .call (environment) execution environment mention source error messages. message_env (environment) execution environment use evaluate variables error messages. parent parent condition, might create rlang::try_fetch(). See rlang::abort() additional information. ... Additional parameters passed cli::cli_abort() rlang::abort().","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-shared_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters used in multiple functions — .shared_params","title":"Parameters used in multiple functions — .shared_params","text":"Reused parameter definitions gathered easier editing.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-shared_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters used in multiple functions — .shared_params","text":".call (environment) execution environment mention source error messages. levels (character) allowed values factor.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_col_has_unknown_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop if a column has an unknown specification class — .stop_col_has_unknown_spec","title":"Stop if a column has an unknown specification class — .stop_col_has_unknown_spec","text":"Stop column unknown specification class","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_col_has_unknown_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop if a column has an unknown specification class — .stop_col_has_unknown_spec","text":"","code":".stop_col_has_unknown_spec(.col_name, class, .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_col_has_unknown_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop if a column has an unknown specification class — .stop_col_has_unknown_spec","text":".col_name (length-1 character) name column. class (character) classes column specification. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_args_not_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all args are hrmn_spec objects — .stop_if_args_not_spec","title":"Check that all args are hrmn_spec objects — .stop_if_args_not_spec","text":"Check args hrmn_spec objects","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_args_not_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all args are hrmn_spec objects — .stop_if_args_not_spec","text":"","code":".stop_if_args_not_spec(..., .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_args_not_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all args are hrmn_spec objects — .stop_if_args_not_spec","text":"... Arguments check. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_args_not_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that all args are hrmn_spec objects — .stop_if_args_not_spec","text":"NULL, invisibly.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_args_unnamed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all specified args are named — .stop_if_args_unnamed","title":"Check that all specified args are named — .stop_if_args_unnamed","text":"Check specified args named","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_args_unnamed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all specified args are named — .stop_if_args_unnamed","text":"","code":".stop_if_args_unnamed(..., .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_args_unnamed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all specified args are named — .stop_if_args_unnamed","text":"... Arguments check. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_args_unnamed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that all specified args are named — .stop_if_args_unnamed","text":"NULL, invisibly.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_missing_col_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop if data frame is missing columns from specification — .stop_if_missing_col_names","title":"Stop if data frame is missing columns from specification — .stop_if_missing_col_names","text":"Stop data frame missing columns specification","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_missing_col_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop if data frame is missing columns from specification — .stop_if_missing_col_names","text":"","code":".stop_if_missing_col_names(.data, .spec, .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_missing_col_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop if data frame is missing columns from specification — .stop_if_missing_col_names","text":".data (data.frame) data frame harmonize. .spec (hrmn_spec_df) data frame harmonization specification. .call (environment) execution environment mention source error messages.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-stop_if_missing_col_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop if data frame is missing columns from specification — .stop_if_missing_col_names","text":"NULL (invisibly)","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-to_hrmn_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a harmonization specification — .to_hrmn_spec","title":"Validate a harmonization specification — .to_hrmn_spec","text":"Validate harmonization specification","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-to_hrmn_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a harmonization specification — .to_hrmn_spec","text":"","code":".to_hrmn_spec(.spec, .subclass = NULL, .call = rlang::caller_env())"},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-to_hrmn_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a harmonization specification — .to_hrmn_spec","text":".spec (NULL hrmn_spec) object validate harmonization specification object. .subclass (NULL length-1 character) provided, check .spec inherits given subclass. example, confirm .spec class \"hrmn_spec_fct, use .subclass = \"fct\".","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/dot-to_hrmn_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a harmonization specification — .to_hrmn_spec","text":"validated .spec object, informative error.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize a data frame — harmonize_df","title":"Harmonize a data frame — harmonize_df","text":"Harmonize data frame","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize a data frame — harmonize_df","text":"","code":"harmonize_df(   .data,   ...,   .spec = NULL,   .unspecified_columns = c(\"error\", \"drop\", \"keep\") )"},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize a data frame — harmonize_df","text":".data (data.frame) data frame harmonize. ... dots future extensions must empty. .spec (hrmn_spec_df) data frame harmonization specification. .unspecified_columns (\"error\", \"drop\", \"keep\") handle columns .data present .spec.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize a data frame — harmonize_df","text":"input .data harmonized tibble::tibble().","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harmonize a data frame — harmonize_df","text":"","code":"df <- data.frame(   size = c(\"Small\", \"Medium\", \"S\", \"M\", \"Large\", \"Lrg\", \"Sm\"),   id = 1:7 )  # This spec will coerce values to NA if they are not \"Small\", \"Medium\", # or \"Large\". spec <- specify_df(   size = specify_fct(levels = c(\"Small\", \"Medium\", \"Large\")) )  # We can provide harmonization rules to the data before the spec is applied. # Here, we harmonize the input factor to convert \"S\", \"M\", \"Sm\", and \"Lrg\" to # valid values. harmonize_df(   df,   size = harmonize_fct(     size,     .lookup = c(\"S\" = \"Small\", \"M\" = \"Medium\", \"Sm\" = \"Small\", \"Lrg\" = \"Large\")   ),   .spec = spec,   .unspecified_columns = \"keep\" ) #> # A tibble: 7 × 2 #>   size      id #>   <fct>  <int> #> 1 Small      1 #> 2 Medium     2 #> 3 Small      3 #> 4 Medium     4 #> 5 Large      5 #> 6 Large      6 #> 7 Small      7"},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_fct.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize a factor — harmonize_fct","title":"Harmonize a factor — harmonize_fct","text":"Harmonize factor","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_fct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize a factor — harmonize_fct","text":"","code":"harmonize_fct(.data, ..., .spec = NULL, .lookup = NULL)"},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_fct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize a factor — harmonize_fct","text":".data (character coercible character) vector harmonize specified factor. ... dots future extensions must empty. .spec (hrmn_spec_fct) harmonization specification specify_fct(). .lookup (named character) vector replacement values. names values .data values target values.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_fct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize a factor — harmonize_fct","text":"harmonized factor().","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/hrmn/reference/harmonize_fct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harmonize a factor — harmonize_fct","text":"","code":"# Without a spec, harmonize_fct() acts like [base::factor()]. harmonize_fct(c(\"a\", \"b\", \"c\")) #> [1] a b c #> Levels: a b c  # Basic harmonization, dropping levels not in the spec spec <- specify_fct(levels = c(\"a\", \"b\")) harmonize_fct(c(\"a\", \"b\", \"c\"), .spec = spec) #> [1] a    b    <NA> #> Levels: a b  # Using a lookup table to recode values spec2 <- specify_fct(levels = c(\"fruit\", \"citrus\")) lookup <- c(apple = \"fruit\", banana = \"fruit\", orange = \"citrus\") harmonize_fct(   c(\"apple\", \"banana\", \"orange\"),   .spec = spec2,   .lookup = lookup ) #> [1] fruit  fruit  citrus #> Levels: fruit citrus"},{"path":"https://jonthegeek.github.io/hrmn/reference/hrmn-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hrmn: Harmonize Datasets — hrmn-package","title":"hrmn: Harmonize Datasets — hrmn-package","text":"common early step data analysis \"data harmonization\" – converting disparate datasets unified, consistent format, consistent column names, classes, values. goal 'hrmn' make process easy can .","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/hrmn/reference/hrmn-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hrmn: Harmonize Datasets — hrmn-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID)","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. rlang caller_arg, caller_env","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame specification — specify_df","title":"Data frame specification — specify_df","text":"Create object specifies desired format data frame. specification object contain data , rules harmonization.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame specification — specify_df","text":"","code":"specify_df(...)"},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data frame specification — specify_df","text":"... (hrmn_spec) Column specifications, given named arguments.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data frame specification — specify_df","text":"hrmn_spec_df object acts specification.","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data frame specification — specify_df","text":"","code":"specify_df(   response = specify_fct(levels = c(\"Yes\", \"No\", \"Maybe\")),   outcome = specify_fct(levels = c(\"Positive\", \"Negative\")) ) #> $response #> $levels #> [1] \"Yes\"   \"No\"    \"Maybe\" #>  #> attr(,\"class\") #> [1] \"hrmn_spec_fct\" \"hrmn_spec\"     \"list\"          #>  #> $outcome #> $levels #> [1] \"Positive\" \"Negative\" #>  #> attr(,\"class\") #> [1] \"hrmn_spec_fct\" \"hrmn_spec\"     \"list\"          #>  #> attr(,\"class\") #> [1] \"hrmn_spec_df\" \"hrmn_spec\"    \"list\""},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_fct.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor specification — specify_fct","title":"Factor specification — specify_fct","text":"Create object specifies desired levels factor variable. specification object contain data , rules harmonization.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_fct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor specification — specify_fct","text":"","code":"specify_fct(levels = character())"},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_fct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor specification — specify_fct","text":"levels (character) allowed values factor.","code":""},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_fct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factor specification — specify_fct","text":"hrmn_spec_fct object acts specification.","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/hrmn/reference/specify_fct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factor specification — specify_fct","text":"","code":"specify_fct(levels = c(\"a\", \"b\", \"c\")) #> $levels #> [1] \"a\" \"b\" \"c\" #>  #> attr(,\"class\") #> [1] \"hrmn_spec_fct\" \"hrmn_spec\"     \"list\""}]
